<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

<!--    &lt;!&ndash;加载数据库属性文件&ndash;&gt;-->
<!--    <context:property-placeholder location="classpath:properties/rabbitmq.properties"/>-->
<!--    &lt;!&ndash;配置rabbitMQ&ndash;&gt;-->
<!--    &lt;!&ndash;配置connection-factory，指定连接rabbit server参数 &ndash;&gt;-->
<!--    <rabbit:connection-factory id="connectionFactory"-->
<!--                               virtual-host="ic_host"-->
<!--                               host="127.0.0.1"-->
<!--                               port="5672"-->
<!--                               username="admin"-->
<!--                               password="526995"-->
<!--                               publisher-returns="true"-->
<!--                               publisher-confirms="true"/>-->

<!--    &lt;!&ndash;通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 &ndash;&gt;-->
<!--    <rabbit:admin connection-factory="connectionFactory" />-->
<!--    &lt;!&ndash;定义rabbit template用于数据的接收和发送 &ndash;&gt;-->
<!--    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />-->

<!--    &lt;!&ndash;定义queue  说明：durable:是否持久化 exclusive: 仅创建者可以使用的私有队列，断开后自动删除 auto_delete: 当所有消费客户端连接断开后，是否自动删除队列&ndash;&gt;-->
<!--    <rabbit:queue name="queue1" durable="true" auto-delete="false" exclusive="false" />-->
<!--    <rabbit:queue name="queue2" durable="true" auto-delete="false" exclusive="false" />-->
<!--    <rabbit:queue name="queue3" durable="true" auto-delete="false" exclusive="false" />-->

<!--    &lt;!&ndash;定义topic-exchange &ndash;&gt;-->
<!--    <rabbit:topic-exchange name="topic_exchange" durable="true" auto-delete="false">-->
<!--        <rabbit:bindings>-->
<!--            <rabbit:binding queue="queue1" pattern="queue1.send"/>-->
<!--            <rabbit:binding queue="queue2" pattern="queue2.send"/>-->
<!--            <rabbit:binding queue="queue2" pattern="queue1.send"/>-->
<!--        </rabbit:bindings>-->
<!--    </rabbit:topic-exchange>-->

<!--    &lt;!&ndash;定义direct-exchange &ndash;&gt;-->
<!--    <rabbit:direct-exchange name="direct_exchange" durable="true" auto-delete="false">-->
<!--        <rabbit:bindings>-->
<!--            <rabbit:binding queue="queue3" key="queue3.send"/>-->
<!--        </rabbit:bindings>-->
<!--    </rabbit:direct-exchange>-->

<!--    &lt;!&ndash; 消息接收者 &ndash;&gt;-->

<!--    <bean id="consumer1" class="com.ic.learn.service.impl.Consumer1"/>-->
<!--    <bean id="consumer2" class="com.ic.learn.service.impl.Consumer2"/>-->
<!--    <bean id="consumer3" class="com.ic.learn.service.impl.Consumer3"/>-->

<!--    &lt;!&ndash; queue listener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 &ndash;&gt;-->
<!--    <rabbit:listener-container connection-factory="connectionFactory" >-->
<!--        <rabbit:listener  queues="queue1"  ref="consumer1"/>-->
<!--    </rabbit:listener-container>-->

<!--    <rabbit:listener-container connection-factory="connectionFactory" >-->
<!--        <rabbit:listener  queues="queue2"  ref="consumer2"/>-->
<!--    </rabbit:listener-container>-->

<!--    <rabbit:listener-container connection-factory="connectionFactory" >-->
<!--        <rabbit:listener  queues="queue3"  ref="consumer3"/>-->
<!--    </rabbit:listener-container>-->

</beans>